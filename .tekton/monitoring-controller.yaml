---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: monitoring-controller
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "1"
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "pull_request" && target_branch == "main"
    # event == "pull_request" &&
    pipelinesascode.tekton.dev/target-namespace: "homelab"
    pipelinesascode.tekton.dev/task: "https://raw.githubusercontent.com/ArthurVardevanyan/HomeLab/main/tekton/tasks/git-clone/0.9.1/git-clone.yaml"

spec:
  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: git-commit
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: git-url
        description: Repository URL to clone from.
        type: string
      - name: git-commit
        type: string

    workspaces:
      - name: data
      - name: git_auth_secret

    tasks:
      - name: git-clone
        taskRef:
          name: git-clone
          kind: Task
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.git-commit)
        workspaces:
          - name: output
            workspace: data
          - name: basic-auth
            workspace: git_auth_secret

      - name: test-build
        runAfter:
          - git-clone
        workspaces:
          - name: output
            workspace: data
        params:
          - name: revision
            value: $(params.git-commit)
        taskSpec:
          workspaces:
            - name: output
              optional: false
          stepTemplate:
            name: stepTemplate
            resources:
              requests:
                memory: 500Mi
                cpu: 500m
                ephemeral-storage: 100Mi
              limits:
                cpu: "4"
                memory: 5Gi
                ephemeral-storage: 100Mi
            securityContext:
              privileged: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop:
                  - ALL
          volumes:
            - name: cache
              persistentVolumeClaim:
                claimName: cache
          steps:
            - name: test-build
              image: registry.arthurvardevanyan.com/homelab/toolbox:not_latest
              env:
                - name: TAG
                  value: $(params.revision)
                - name: WORKSPACE_DATA_PATH
                  value: $(workspaces.output.path)
              volumeMounts:
                - name: cache
                  mountPath: /tmp
              script: |
                set -o errexit
                set -o nounset
                set -o pipefail

                cd ${WORKSPACE_DATA_PATH}
                git config --global --add safe.directory "${WORKSPACE_DATA_PATH}"

                make ko-build
  serviceAccountName: pipeline
  workspaces:
    - name: data
      volumeClaimTemplate:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "100Mi"
          storageClassName: rook-ceph-block
    - name: git_auth_secret
      secret:
        secretName: "{{ git_auth_secret }}"
